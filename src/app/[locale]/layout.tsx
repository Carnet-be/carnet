import "~/styles/globals.css";

import { Inter } from "next/font/google";
import { headers } from "next/headers";

import { ClerkLoaded, ClerkLoading, ClerkProvider } from "@clerk/nextjs";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { TRPCReactProvider } from "~/trpc/react";
import LoadingPage from "../_components/ui/LoadingPage";
import { Providers } from "../providers";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

const locales = ["en", "de", "fr"];

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}
export const metadata = {
  title: "Carnet",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const messages = await getMessages();
  return (
    <ClerkProvider>
      <html lang={locale}>
        <body className={`font-sans ${inter.variable}  bg-gray-50`}>
          <TRPCReactProvider headers={headers()}>
            <Providers>
              <ClerkLoading>
                <LoadingPage />
              </ClerkLoading>
              <ClerkLoaded>
                <NextIntlClientProvider locale={locale} messages={messages}>
                  {children}
                </NextIntlClientProvider>
              </ClerkLoaded>
            </Providers>
          </TRPCReactProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
